<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Management</title>
    <link rel="stylesheet" href="../css/usemstyle.css" />
    <link rel="stylesheet" href="../css/general.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    />

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <style>
    .icon-button {
      background: none;
      border: none;
      cursor: pointer;
      font-size: 15px;
      margin: 1px;
      padding: 0;
    }
    .remove {
      color: green;
    }

    .modify {
      color: rgb(181, 181, 28);
    }

    .suspended {
      color: red;
      border: none;
      background: none;
    }


.add-user-button {
 padding: 10px 20px;
    background-color: #095c02;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-family: Poppins;
    margin-top: 10px;
    margin-right: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease-in-out;
}

.add-user-button:hover {
  background-color:#45a049 ;
}

/* Overlay styles */
.overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
  justify-content: center;
  align-items: center;
}

.overlay-content {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  width: 400px;
  max-width: 90%;
}

.overlay-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.overlay-title {
  margin: 0;
  font-size: 1.5rem;
}

.close-button {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
}

.form-group {
 margin-bottom: 15px;
}
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        .form-group input, .form-group select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

.submit-button {
  width: 100%;
  padding: 10px;
  background-color: #2196F3;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
}
  </style>
  <body>
    <%- include("./includes/sidebar") %>
    <div class="container">
      <header>
        <h1>
<span style="color: #095c02; font-weight: 800">User</span> Management
        </h1>
      </header>

      <div class="top-bar">
        <input
          type="text"
          id="searchUser"
          placeholder="Search User"
          class="search-bar"
          />
          <button class="add-user-button" id="addUserButton">Add User</button>
      </div>

      <table id="userTable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>User Role</th>
            <th>Status</th>
            <th>Last Login</th>
            <th></th>
          </tr>
        </thead>
        <tbody id="userList">
          <% users.forEach(user => { %>
          <tr>
            <td><%= user.full_name %></td>
            <td><%= user.email %></td>
            <td><%= user.role %></td>
            <td><%= user.status %></td>
            <td><%= user.last_login %></td>
            <td>
              <div class="dropdown">
                <button class="icon-button dropdown-toggle" title="Actions">
                  <i class="fas fa-ellipsis-v"></i>
                </button>
                <ul class="dropdown-menu">
                  <li>
                    <button class="dropdown-item remove">
                      <i class="fas fa-trash"></i> Remove
                    </button>
                  </li>
                  <li>
                    <button class="dropdown-item modify">
                      <i class="fas fa-edit"></i> Modify
                    </button>
                  </li>
                  <li>
                    <button class="dropdown-item suspended">
                      <i class="fas fa-ban"></i> Suspend
                    </button>
                  </li>
                </ul>
              </div>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
    <script src="/js/usem-api.js"></script>

    <!-- Role Modal -->
    <div id="roleModal" class="modal">
      <div class="modal-content">
        <h3>Modify Roles</h3>
        <label
          ><input type="checkbox" class="role-checkbox" value="Admin" />
          Admin</label
        >
        <label
          ><input type="checkbox" class="role-checkbox" value="Employee" />
          Employee</label
        >
        <button class="save" onclick="saveRoles()">Save</button>
        <button class="close" onclick="closeModal()">Close</button>
      </div>
    </div>


<!-- Add User Overlay -->
<div class="overlay" id="addUserOverlay">
    <div class="overlay-content">
        <div class="overlay-header">
            <h2 class="overlay-title">Add New User</h2>
            <button class="close-button" id="closeOverlay">&times;</button>
        </div>
        <form id="addUserForm">
            <div class="form-group">
                <label for="name">Full Name</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="phone">
            </div>
            <div class="form-group">
                <label for="role">User Role</label>
                <select id="role" name="role" required>
                    <option value="">Select Role</option>
                    <option value="Admin">Admin</option>
                    <option value="Employee">Employee</option>
                </select>
            </div>
            <button type="submit" class="submit-button">Add User</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addUserButton = document.getElementById('addUserButton');
        const addUserOverlay = document.getElementById('addUserOverlay');
        const closeOverlay = document.getElementById('closeOverlay');
        const addUserForm = document.getElementById('addUserForm');
        
        // Show overlay when Add User button is clicked
        addUserButton.addEventListener('click', function() {
            addUserOverlay.style.display = 'flex';
        });
        
        // Hide overlay when close button is clicked
        closeOverlay.addEventListener('click', function() {
            addUserOverlay.style.display = 'none';
        });
        
        // Hide overlay when clicking outside the form
        addUserOverlay.addEventListener('click', function(e) {
            if (e.target === addUserOverlay) {
                addUserOverlay.style.display = 'none';
            }
        });
        
        // Handle form submission
        addUserForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Here you would typically send the data to a server
            // For this example, we'll just log it and close the overlay
            const formData = new FormData(addUserForm);
            const userData = Object.fromEntries(formData.entries());
            console.log('New user data:', userData);
            
            // Reset form and close overlay
            addUserForm.reset();
            addUserOverlay.style.display = 'none';
            
            // In a real application, you would add the new user to the table
            // after successfully saving to the database
            alert('User added successfully! (This is a demo)');
        });
    });
</script>



    <script>
      // Remove User Function

      // Save Roles
      function saveRoles() {
        let selectedRole = document.querySelector(".role-checkbox:checked");
        selectedRow.innerHTML = "";

        if (selectedRole) {
          let span = document.createElement("span");
          span.className = `role ${selectedRole.value.toLowerCase()}`;
          span.textContent = selectedRole.value;
          selectedRow.appendChild(span);
        }

        closeModal();
      }

      // Close Modal
      function closeModal() {
        document.getElementById("roleModal").style.display = "none";
      }

      // Search Bar Functionality
      document
        .getElementById("searchUser")
        .addEventListener("keyup", function () {
          let filter = this.value.toLowerCase();
          let rows = document.querySelectorAll("#userTable tbody tr");

          rows.forEach((row) => {
            let name = row
              .querySelector("td:nth-child(2) strong")
              .textContent.toLowerCase();
            if (name.includes(filter)) {
              row.style.display = "";
            } else {
              row.style.display = "none";
            }
          });
        });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".dropdown-toggle").forEach((button) => {
          button.addEventListener("click", (event) => {
            let dropdown = event.currentTarget.parentElement;
            dropdown.classList.toggle("active");
          });
        });

        // Close dropdown when clicking outside
        document.addEventListener("click", (event) => {
          document.querySelectorAll(".dropdown").forEach((dropdown) => {
            if (!dropdown.contains(event.target)) {
              dropdown.classList.remove("active");
            }
          });
        });
      });
    </script>
  </body>
</html>
