<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard | Property Management System</title>
    
    <link rel="stylesheet" href="../css/general.css">
    <link rel="stylesheet" href="../css/inventory.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

</head>
<body>
    <%- include("./includes/sidebar") %>
   
    <div class="container">
        <div class="main-container">
        <h2>REPORT ON THE PHYSICAL COUNT OF PROPERTY, PLANT AND EQUIPMENT</h2>
        <h3>Tech. & Scientific Equipment (1 06 05 140 00)</h3>
        
        <div class="table-wrapper">
           
            <table>
                <thead class="t-head">
                    <tr>
                        <th>ID No.</th>
                        <th>Article</th>
                        <th>Description</th>
                        <th>Property Number</th>
                        <th>Unit</th>
                        <th>Value Unit</th>
                        <th>Qty.per P Card</th>
                        <th>Qty.per P Count</th>  

                        <th colspan="2">
                            <div>
                              Shortage/Overage
                              <div style="display: flex; margin-top: 5px;">
                                <div style="flex: 1; margin-top: 7px; ">Qty</div>
                                <div style="flex: 1; margin-top: 7px;">Value</div>
                              </div>
                            </div>
                          </th>

                          <th colspan="2">
                            <div>
                              Remarks
                              <div style="display: flex; margin-top: 5px; gap: 10px; ">
                                <div style="flex: 1; margin-top: 3px; font-size: 10px;">Receipted by:</div>
                                <div style="flex: 1; margin-top: 7px;">Location</div>
                              </div>
                            </div>
                          </th>
                        <th>Date Acquired</th>
                        <th></th>
                    </tr>
                    
                </thead>
                
                <div class="controls">
                   <div class="filter-content">
                    <button id="sort-by-btn" class="action-button">
                      Sort by <img src="/Public/images/clarity--sort-by-line.svg" alt="" class="srt">
                    </button>
                    <button id="filter-btn" class="action-button">
                      Filter <img src="/Public/images/mdi--filter.svg" alt="" class="filt">
                    </button>
                </div>
                    <div class="search-wrapper">
                        <input type="text" class="search-bar" id="searchBar" placeholder="Search...">
                        <div class="search-icon" id="searchIcon"><img src="/Public/images/iconamoon--search-bold.svg" alt="" class="srch"></div>
                      </div>
                  </div>
                  
                  <!-- Sort By Overlay -->
                  <div id="sort-by-overlay" class="overlay hidden">
                    <div class="sort-by-container">
                        <div class="sort-by-header">Sort by</div>
                        <div class="sort-by-section">
                            <div class="sort-by-title">Date</div>
                            <label>
                                <input type="radio" name="date" value="ascending" />
                                Ascending
                            </label>
                            <label>
                                <input type="radio" name="date" value="descending" />
                                Descending
                            </label>
                        </div>
                        <div class="sort-by-section">
                            <div class="sort-by-title">ID No.</div>
                            <label>
                                <input type="radio" name="id" value="1-100" />
                                1 - 100
                            </label>
                            <label>
                                <input type="radio" name="id" value="100-1" />
                                100 - 1
                            </label>
                        </div>
                        <div class="sort-by-section">
                            <div class="sort-by-title">Name of Item</div>
                            <label>
                                <input type="radio" name="name" value="a-z" />
                                A - Z
                            </label>
                            <label>
                                <input type="radio" name="name" value="z-a" />
                                Z - A
                            </label>
                        </div>

                    <div class="sorty">
                        <button class="apply-btn" id="apply-sort-by">Apply</button>
                        <button class="reset-btn" id="reset-sort-by">Reset</button>
                        <button class="close-btn" id="close-sort-by">Close</button>
                    </div>

                    </div>
                    </div>
                  </div>
                  
                  <!-- Filter Overlay -->
<div id="filter-overlay" class="overlay hidden">
    <div class="overlay-content">
      <h4>Filter</h4>
      <div class="filter-group">
        <label>Date range</label>
        <div>
            <label>From</label>
          <input type="date" id="filter-from" placeholder="From" />
          <label>TO</label>
          <input type="date" id="filter-to" placeholder="To" />
        </div>
      </div>
      <div class="filter-group">
        <label>Name of item</label>
        <select id="filter-item">
          <option value="">Ex. Electronic Power Transmission System</option>
          <option value="Another Item">Another Item</option>
        </select>
      </div>
      <div class="filter-group">
        <label>Accountable</label>
        <select id="filter-accountable">
          <option value="">Ex. Carlota Salas</option>
          <option value="Another Accountable">Another Accountable</option>
        </select>
      </div>
      <div class="filter-group">
        <label>Property No.</label>
        <input type="text" id="filter-property-no" placeholder="Ex. 15-08-247" />
      </div>
      <button class="reset-btn" id="reset-filter">Reset</button>
      <button class="close-btn" id="close-filter">Close</button>
    </div>
  </div>
  
 </div>       

                <tbody>
                    <tr>
                        <td>1</td>
                        <td>Transmission</td>
                        <td>Electronic Power Transmission System</td>
                        <td>15-08-247</td>
                        <td>set</td>
                        <td>308948.00</td>
                        <td>1</td>
                        <td>1</td>
                        <td>1</td>
                        <td>123</td>
                        <td>Carlota Salas</td>
                        <td>CET</td>
                        <td>6/12/20</td>
                        <td>
                            <!-- Three-dots menu -->
                            <div class="menu-container">
                                <i class="fas fa-ellipsis-v menu-icon"></i>
                                <div class="dropdown-menu">
                                    <button onclick="handleAction('Update')">Update</button>
                                    <button onclick="handleAction('Print')">Print</button>
                                    <button onclick="handleAction('Dispose')"><a href="/ptr">Dispose</a></button>
                                </div>
                            </div>
                        </td>
                    </tr>


                    <script>
                        function handleAction (id){
                            var IDD = id

                            if(IDD == "Print"){
                                // alert('');
                                window.print();
                            }

                            if (IDD == "Update"){
                                alert('update');
                            }

                        }
                    </script>
                    <!-- Repeat rows as needed -->
                

                
                <tr>
                    <td>2</td>
                    <td>Transmission</td>
                    <td>Electronic Power Transmission System</td>
                    <td>15-08-247</td>
                    <td>set</td>
                    <td>308948.00</td>
                    <td>1</td>
                    <td>1</td>
                    <td>1</td>
                    <td>123</td>
                    <td>Carlota Salas</td>
                    <td>CET</td>
                    <td>6/12/20</td>
                    <td>
                        <!-- Three-dots menu -->
                        <div class="menu-container">
                            <i class="fas fa-ellipsis-v menu-icon"></i>
                            <div class="dropdown-menu">
                                <button onclick="handleAction('Update')">Update</button>
                                <button onclick="handleAction('Print')">Print</button>
                                <button onclick="handleAction('Dispose')">Dispose</button>
                            </div>
                        </div>
                    </td>
                </tr>
                <!-- Repeat rows as needed -->
            
                
            
                <tr>
                    <td>3</td>
                    <td>Transmission</td>
                    <td>Electronic Power Transmission System</td>
                    <td>15-08-247</td>
                    <td>set</td>
                    <td>308948.00</td>
                    <td>1</td>
                    <td>1</td>
                    <td>1</td>
                    <td>123</td>
                    <td>Carlota Salas</td>
                    <td>CET</td>
                    <td>6/12/20</td>
                    <td>
                        <!-- Three-dots menu -->
                        <div class="menu-container">
                            <i class="fas fa-ellipsis-v menu-icon"></i>
                            <div class="dropdown-menu">
                                <button onclick="handleAction('Update')">Update</button>
                                <button onclick="handleAction('Print')">Print</button>
                                <button onclick="handleAction('Dispose')">Dispose</button>
                            </div>
                        </div>
                    </td>
                </tr>
                <!-- Repeat rows as needed -->

                <tr>
                    <td>4</td>
                    <td>Transmission</td>
                    <td>Electronic Power Transmission System</td>
                    <td>15-08-247</td>
                    <td>set</td>
                    <td>308948.00</td>
                    <td>1</td>
                    <td>1</td>
                    <td>1</td>
                    <td>123</td>
                    <td>Carlota Salas</td>
                    <td>CET</td>
                    <td>6/12/20</td>
                    <td>
                        <!-- Three-dots menu -->
                        <div class="menu-container">
                            <i class="fas fa-ellipsis-v menu-icon"></i>
                            <div class="dropdown-menu">
                                <button onclick="handleAction('Update')">Update</button>
                                <button onclick="handleAction('Print')">Print</button>
                                <button onclick="handleAction('Dispose')">Dispose</button>
                            </div>
                        </div>
                    </td>
                </tr>
                <!-- Repeat rows as needed -->
            </tbody>
            
            </table>

            
            </div>

        </div>
        </div>
    </div>


    <script>
        // Toggle the dropdown menu
        document.addEventListener('click', function (e) {
            const menus = document.querySelectorAll('.menu-container');
            menus.forEach(menu => {
                if (menu.contains(e.target)) {
                    // Toggle the active class for the clicked menu
                    menu.classList.toggle('active');
                } else {
                    // Close other open menus
                    menu.classList.remove('active');
                }
            });
        });
        
    </script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const sortByBtn = document.getElementById("sort-by-btn");
        const filterBtn = document.getElementById("filter-btn");
        const sortByOverlay = document.getElementById("sort-by-overlay");
        const filterOverlay = document.getElementById("filter-overlay");
        const closeSortBy = document.getElementById("close-sort-by");
        const closeFilter = document.getElementById("close-filter");
        const resetSortBy = document.getElementById("reset-sort-by");
        const resetFilter = document.getElementById("reset-filter");
    
        // Toggle Overlay Function
        const toggleOverlay = (button, overlayToToggle, otherOverlay) => {
            button.addEventListener("click", (e) => {
                e.stopPropagation();
                const isHidden = overlayToToggle.classList.contains("hidden");
                overlayToToggle.classList.toggle("hidden", !isHidden);
                otherOverlay.classList.add("hidden");
            });
        };
    
        // Close Overlay Function
        const closeOverlay = (button, overlayToClose) => {
            button.addEventListener("click", () => {
                overlayToClose.classList.add("hidden");
            });
        };
    
        // Reset Filter Inputs Function
        const resetFilters = () => {
            document.getElementById("filter-from").value = "";
            document.getElementById("filter-to").value = "";
            document.getElementById("filter-item").value = "";
            document.getElementById("filter-accountable").value = "";
            document.getElementById("filter-property-no").value = "";
            filterTable(); // Reset and reapply filters
        };
    
        // Reset Sort By Function
        const resetSortByFilters = () => {
            const sortRadios = document.getElementsByName("sort");
            sortRadios.forEach((radio) => radio.checked = false);
            sortTable(); // Reset sorting and reapply sorting logic
        };
    
        // Toggle Overlays
        toggleOverlay(sortByBtn, sortByOverlay, filterOverlay);
        toggleOverlay(filterBtn, filterOverlay, sortByOverlay);
    
        // Close Overlays
        closeOverlay(closeSortBy, sortByOverlay);
        closeOverlay(closeFilter, filterOverlay);
    
        // Prevent Closing on Overlay Interaction
        const preventCloseOnClickInside = (overlay) => {
            overlay.addEventListener("click", (e) => e.stopPropagation());
        };
        preventCloseOnClickInside(sortByOverlay);
        preventCloseOnClickInside(filterOverlay);
    
        // Close Overlays on Outside Click
        document.addEventListener("click", () => {
            sortByOverlay.classList.add("hidden");
            filterOverlay.classList.add("hidden");
        });
    
        // Filtering Logic
        const filterTable = () => {
            const fromDate = document.getElementById("filter-from").value;
            const toDate = document.getElementById("filter-to").value;
            const filterItem = document.getElementById("filter-item").value.toLowerCase();
            const filterAccountable = document.getElementById("filter-accountable").value.toLowerCase();
            const filterPropertyNo = document.getElementById("filter-property-no").value.toLowerCase();
    
            const rows = document.querySelectorAll("tbody tr");
    
            rows.forEach(row => {
                const dateAcquired = row.cells[11].textContent;
                const itemName = row.cells[1].textContent.toLowerCase();
                const accountable = row.cells[9].textContent.toLowerCase();
                const propertyNo = row.cells[2].textContent.toLowerCase();
    
                // Check date filter
                const dateMatch = (!fromDate || dateAcquired >= fromDate) && (!toDate || dateAcquired <= toDate);
    
                // Apply filtering logic
                if (
                    (itemName.includes(filterItem) || !filterItem) &&
                    (accountable.includes(filterAccountable) || !filterAccountable) &&
                    (propertyNo.includes(filterPropertyNo) || !filterPropertyNo) &&
                    dateMatch
                ) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        };
    
        // Sorting Logic
        const sortTable = () => {
            const rows = Array.from(document.querySelectorAll("tbody tr"));
            const sortOption = document.querySelector("input[name='sort']:checked")?.value;
    
            if (sortOption) {
                rows.sort((a, b) => {
                    let aValue, bValue;
    
                    switch (sortOption) {
                        case "Article":
                            aValue = a.cells[0].textContent;
                            bValue = b.cells[0].textContent;
                            break;
                        case "Description":
                            aValue = a.cells[1].textContent;
                            bValue = b.cells[1].textContent;
                            break;
                        case "Value":
                            aValue = parseFloat(a.cells[4].textContent.replace(/,/g, ""));
                            bValue = parseFloat(b.cells[4].textContent.replace(/,/g, ""));
                            break;
                        default:
                            return 0;
                    }
    
                    return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;
                });
    
                // Reinsert rows after sorting
                const tbody = document.querySelector("tbody");
                rows.forEach(row => tbody.appendChild(row)); // This ensures the rows are updated in order
            }
        };
    
        // Event Listeners for Reset Buttons
        resetFilter.addEventListener("click", resetFilters);
        resetSortBy.addEventListener("click", resetSortByFilters);
    
        // Apply Filtering and Sorting on Input Change
        document.querySelectorAll("#filter-from, #filter-to, #filter-item, #filter-accountable, #filter-property-no").forEach(input => {
            input.addEventListener("input", () => {
                filterTable(); // Call filterTable on change
            });
        });
    
        document.querySelectorAll("input[name='sort']").forEach(radio => {
            radio.addEventListener("change", () => {
                sortTable(); // Call sortTable on sort option change
            });
        });
        
        // Initial Filter and Sort on Page Load
        filterTable();
        sortTable();
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
    const overlay = document.getElementById("sort-by-overlay");
    const closeButton = document.getElementById("close-sort-by");
    const resetButton = document.getElementById("reset-sort-by");
    const applyButton = document.getElementById("apply-sort-by");
    const sortInputs = overlay.querySelectorAll("input[type='radio']");
  
    // Open overlay function
    function openSortOverlay() {
      overlay.classList.remove("hidden");
    }
  
    // Close overlay function
    closeButton.addEventListener("click", () => {
      overlay.classList.add("hidden");
    });
  
    // Reset button functionality
    resetButton.addEventListener("click", () => {
      sortInputs.forEach((input) => (input.checked = false));
    });
  
    // Apply button functionality
    applyButton.addEventListener("click", () => {
      const selectedSortOptions = {};
      
      // Collect selected sort options
      sortInputs.forEach((input) => {
        if (input.checked) {
          selectedSortOptions[input.name] = input.value;
        }
      });
  
      console.log("Selected Sort Options:", selectedSortOptions);
  
      // Example: Trigger a sorting function with the selected options
      applySorting(selectedSortOptions);
  
      // Close the overlay
      overlay.classList.add("hidden");
    });
  
    // Sorting function (example logic)
    function applySorting(options) {
      // Assume `data` is the array of items to be sorted
      let data = [
        { id: 1, name: "Item A", date: "2023-11-22" },
        { id: 2, name: "Item B", date: "2023-11-20" },
        { id: 3, name: "Item C", date: "2023-11-21" }
      ];
  
      if (options.date) {
        data.sort((a, b) =>
          options.date === "ascending"
            ? new Date(a.date) - new Date(b.date)
            : new Date(b.date) - new Date(a.date)
        );
      }
  
      if (options.id) {
        data.sort((a, b) =>
          options.id === "1-100" ? a.id - b.id : b.id - a.id
        );
      }
  
      if (options.name) {
        data.sort((a, b) =>
          options.name === "a-z"
            ? a.name.localeCompare(b.name)
            : b.name.localeCompare(a.name)
        );
      }
  
      console.log("Sorted Data:", data);
    }
  
    // Example: Attach openSortOverlay to a button (replace '#open-sort-by-btn' with your button ID)
    document.getElementById("open-sort-by-btn").addEventListener("click", openSortOverlay);
  });
  </script>

<script>
    const searchIcon = document.getElementById('searchIcon');
    const searchBar = document.getElementById('searchBar');
  
    searchIcon.addEventListener('click', () => {
      searchBar.classList.toggle('open');
      if (searchBar.classList.contains('open')) {
        searchBar.focus();
      }
    });
  </script>

</body>
<%- include("./includes/print-ics") %>

</html>