<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard | Property Management System</title>
    <link rel="stylesheet" href="../css/dashboardstyle.css" />
    <link rel="stylesheet" href="../css/general.css" />
    <link rel="stylesheet" href="../css/dashboard.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
      .container {
        display: flex;
      }

      .main-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 20px;
      }

      .cards-container {
        display: flex;
        flex-wrap: wrap;
      }

      .chart {
        margin-top: 20px;
        background-color: #f9f9f9;
        padding: 10px;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
      }

      canvas {
        width: 100%;
        height: 300px;
      }
    </style>
  </head>

  <body>
    <%- include("./includes/sidebar") %>
    <div class="container">
      <!-- Main content -->
      <div class="main-content">
        <div class="fix">
          <h1>Dashboard</h1>
          <hr />
        </div>
        <div class="right-allign">
          <p>
            <span id="current-time"
              ><%= currentDateTime.toLocaleString() %></span
            >
          </p>
        </div>

        <!-- Cards -->
        <div class="cards-container">
          <div class="card purple" data-category="ICT Equipment">
            <br /><span id="ICTEquipment"></span> ICT Equipment
          </div>
          <div class="card red" data-category="Office Equipment">
            <br /><span id="officeEquipment"></span> Office Equipment
          </div>
          <div
            class="card green"
            data-category="Agricultural and Forestry Equipment"
          >
            <br /><span id="AgriEquipment"></span> Agricultural and Forestry
            Equipment
          </div>
          <div class="card purple" data-category="Medical Equipment">
            <br /><span id="MedEquipment"></span> Medical Equipment
          </div>
          <div class="card red" data-category="Printing Equipment">
            <br /><span id="PrintEquipment"></span> Printing Equipment
          </div>
          <div
            class="card green"
            data-category="Technical and Scientific Equipment"
          >
            <br /><span id="TSEquipment"></span> Technical and Scientific
            Equipment
          </div>
          <div
            class="card purple"
            data-category="Other Machinery and Equipment"
          >
            <br /><span id="OMEquipment"></span> Other Machinery and Equipment
          </div>
          <div class="card red" data-category="Motor Vehicles">
            <br /><span id="MotorVehicles"></span> Motor Vehicles
          </div>
          <div class="card green" data-category="Furniture and Fixtures">
            <br /><span id="FurnitureEquipment"></span> Furniture and Fixtures
          </div>
          <div class="card purple" data-category="Books">
            <br /><span id="Books"></span> Books
          </div>
          <div class="card red" data-category="Software">
            <br /><span id="Software"></span>Software
          </div>
          <div class="card green" data-category="Machinery">
            <br /><span id="MachineryEquipment"></span> Machinery<br /><span
              id="MachineryEquipment"
            ></span>
          </div>
          <section class="chart">
            <canvas id="myChart"></canvas>
          </section>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="/Public/js/script2.js"></script>

        <script src="../js/dashboard-api.js"></script>

        <script>
          // Function to update the time in real-time
          function updateTime() {
            const currentTimeElement = document.getElementById("current-time");
            const currentDateTime = new Date();
            currentTimeElement.textContent = currentDateTime.toLocaleString();
          }

          // Update the time every second (1000 milliseconds)
          setInterval(updateTime, 1000);

          // Initialize the chart
          const ctx = document.getElementById("myChart").getContext("2d");
          let chart = new Chart(ctx, {
            type: "bar",
            data: {
              labels: [], // Initialize with empty labels
              datasets: [
                {
                  label: "Default Data",
                  data: [], // Initialize with empty data
                  backgroundColor: "rgba(75, 192, 192, 0.2)",
                  borderColor: "rgba(75, 192, 192, 1)",
                  borderWidth: 1,
                },
              ],
            },
            options: {
              responsive: true,
              plugins: {
                legend: {
                  position: "top",
                },
              },
              scales: {
                y: {
                  beginAtZero: true,
                },
              },
            },
          });

          // Fetch data and update the chart
          async function fetchDataAndUpdateChart(category) {
            try {
              const response = await fetch(
                `/dashboard/api/data?category=${encodeURIComponent(category)}`
              );
              const data = await response.json();

              // Update chart with fetched UACS codes and values
              updateChart(data.uacsCodes, data.values);
            } catch (err) {
              console.error("Error fetching data for chart:", err);
            }
          }

          // Function to update the chart data
          function updateChart(labels, data) {
            chart.data.labels = labels; // Update labels with UACS codes
            chart.data.datasets[0].data = data; // Update data values
            chart.update();
          }

          // Add event listeners to cards
          document.querySelectorAll(".card").forEach((card) => {
            card.addEventListener("click", () => {
              const category = card.getAttribute("data-category");
              fetchDataAndUpdateChart(category);
            });
          });

          // Get the maximize icon and table container
          const maximizeIcon = document.getElementById("maximize-icon");
          const tableContainer = document.querySelector(".table-container");

          maximizeIcon.addEventListener("click", function () {
            // Toggle the maximized class on the table container
            tableContainer.classList.toggle("maximized");

            // Ensure the main content remains scrollable
            if (tableContainer.classList.contains("maximized")) {
              // Disable scrolling in the main content when the table is maximized
              document.querySelector(".main-content").style.overflow = "hidden";
            } else {
              // Enable scrolling in the main content again
              document.querySelector(".main-content").style.overflow = "auto";
            }
          });
        </script>
      </div>
    </div>
  </body>
</html>
